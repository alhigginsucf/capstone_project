[{"C:\\Workspace_Alex\\capstone_project\\client\\src\\index.js":"1","C:\\Workspace_Alex\\capstone_project\\client\\src\\App.js":"2","C:\\Workspace_Alex\\capstone_project\\client\\src\\components\\Header.js":"3","C:\\Workspace_Alex\\capstone_project\\client\\src\\components\\ProtectedRoute.js":"4","C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\QuestionEdit.js":"5","C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\ExplorePage.js":"6","C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\QuestionList.js":"7","C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\AskQuestion.js":"8","C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\QuestionPage.js":"9","C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\HomePage.js":"10","C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\LoginPage.js":"11","C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\RegisterPage.js":"12","C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\FrontPage.js":"13","C:\\Workspace_Alex\\capstone_project\\client\\src\\components\\NavMenu.js":"14","C:\\Workspace_Alex\\capstone_project\\client\\src\\components\\NavData.js":"15","C:\\Workspace_Alex\\capstone_project\\client\\src\\redux\\Reducers\\userReducer.js":"16","C:\\Workspace_Alex\\capstone_project\\client\\src\\redux\\Actions\\actionTypes.js":"17","C:\\Workspace_Alex\\capstone_project\\client\\src\\redux\\Actions\\userActions.js":"18"},{"size":531,"mtime":1611190613586,"results":"19","hashOfConfig":"20"},{"size":2355,"mtime":1611190597541,"results":"21","hashOfConfig":"20"},{"size":2608,"mtime":1611193397107,"results":"22","hashOfConfig":"20"},{"size":683,"mtime":1611190054473,"results":"23","hashOfConfig":"20"},{"size":5115,"mtime":1611190404816,"results":"24","hashOfConfig":"20"},{"size":4724,"mtime":1611252848584,"results":"25","hashOfConfig":"20"},{"size":4226,"mtime":1611190404818,"results":"26","hashOfConfig":"20"},{"size":5674,"mtime":1611190404763,"results":"27","hashOfConfig":"20"},{"size":8727,"mtime":1611190404827,"results":"28","hashOfConfig":"20"},{"size":3753,"mtime":1611190404811,"results":"29","hashOfConfig":"20"},{"size":3944,"mtime":1611190404813,"results":"30","hashOfConfig":"20"},{"size":6654,"mtime":1611190404831,"results":"31","hashOfConfig":"20"},{"size":2198,"mtime":1611193938948,"results":"32","hashOfConfig":"20"},{"size":1437,"mtime":1611193348729,"results":"33","hashOfConfig":"20"},{"size":1591,"mtime":1611252872749,"results":"34","hashOfConfig":"20"},{"size":749,"mtime":1611192662975,"results":"35","hashOfConfig":"20"},{"size":93,"mtime":1611192662966,"results":"36","hashOfConfig":"20"},{"size":344,"mtime":1611192662971,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"vzauvi",{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Workspace_Alex\\capstone_project\\client\\src\\index.js",[],["81","82"],"C:\\Workspace_Alex\\capstone_project\\client\\src\\App.js",["83","84"],"import React, { useEffect, useState } from 'react';\nimport './style/App.css'\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Axios from 'axios'\nimport Header from './components/Header';\nimport QuestionEdit from './pages/QuestionEdit';\nimport QuestionList from './pages/QuestionList';\nimport ExplorePage from './pages/ExplorePage';\nimport QuestionPage from './pages/QuestionPage';\nimport AskQuestion from './pages/AskQuestion';\nimport HomePage from './pages/HomePage';\nimport LoginPage from './pages/LoginPage';\nimport Register from './pages/RegisterPage';\nimport FrontPage from './pages/FrontPage';\nimport { useSelector, useDispatch } from 'react-redux'\nimport ProtectedRoute from './components/ProtectedRoute';\n\nexport default function App() {\n\n  // session state from server\n  Axios.defaults.withCredentials = true;\n\n  // states\n  const userState = useSelector(state => state);\n  const loginStatus = userState.logged;\n\n  // check session state\n  useEffect(() => {\n    Axios.get('/user/login').then((resp) => {\n      console.log('LoggedIn: ' + resp.data.loggedIn);\n      if (resp.data.loggedIn === true) {\n        console.log(resp.data.user[0].username + ': Session Logged')\n      }\n    });\n  }, [loginStatus])\n\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Header />\n        <Switch>\n          <ProtectedRoute path='/home' exact component={HomePage} isAuth={loginStatus} />\n          <ProtectedRoute path='/explore' exact component={ExplorePage} isAuth={loginStatus} />\n          <ProtectedRoute path='/ask' exact component={AskQuestion} isAuth={loginStatus} />\n          <ProtectedRoute path='/category/:catid' component={QuestionList} isAuth={loginStatus} />\n          <ProtectedRoute path='/question/:id/answer' component={QuestionPage} isAuth={loginStatus} />\n          <ProtectedRoute path='/question/:id' component={QuestionPage} isAuth={loginStatus} />\n          <ProtectedRoute path='/edit/:id' component={QuestionEdit} isAuth={loginStatus} />\n          <Route path=\"/login\" exact component={LoginPage} />\n          <Route path=\"/register\" exact component={Register} />\n          <Route path=\"/\" component={FrontPage} />\n          {loginStatus ?\n            <Redirect to=\"/home\" /> :\n            <Redirect to=\"/\" />\n          }\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n};\n","C:\\Workspace_Alex\\capstone_project\\client\\src\\components\\Header.js",["85","86"],"import React, { useEffect, useState } from 'react';\nimport '../style/App.css';\nimport { useHistory, Link } from 'react-router-dom';\nimport logo from '../images/logo.png'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { userLoggedOut } from '../redux/Actions/userActions';\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nexport default function Header() {\n\n    // AskHow logo\n    const sitelogo = logo\n\n    // route params\n    let history = useHistory();\n\n    // redux\n    const userState = useSelector(state => state);\n    const loginStatus = userState.logged;\n    const dispatch = useDispatch();\n\n    return (\n        // site header\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n            {loginStatus ?\n                <>\n                    <Link className=\"navbar-brand\" to=\"/home\">\n                        <img src={sitelogo} width=\"75\" height=\"50\" className=\"d-inline-block align-top\" alt=\"Site logo\" loading=\"lazy\"></img>\n                        <span className=\"mb-0 h1\">TheBeerForum</span>\n                    </Link>\n                    <button className=\"navbar-toggler ml-auto\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarToggler\" aria-controls=\"navbarToggler\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarToggler\">\n                        <ul className=\"navbar-nav ml-auto pr-2\">\n                            <li className=\"nav-item\">\n                                <div id=\"hello-user\" className=\"nav-link disabled\">Hello, <span id=\"user\">{userState.firstname} {userState.lastname}</span></div>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" activeclassname=\"active\" to=\"'/auth/front'\" onClick={() => {\n                                    dispatch(userLoggedOut());\n                                    history.push('/')\n                                }}>Logout <ExitToAppIcon /></Link>\n                            </li>\n                        </ul>\n                    </div>\n                </>\n                :\n                <Link className=\"navbar-brand\" to=\"/\">\n                    <img src={sitelogo} width=\"75\" height=\"50\" className=\"d-inline-block align-top\" alt=\"Site logo\" loading=\"lazy\"></img>\n                    <span className=\"mb-0 h1\">TheBeerForum</span>\n                </Link>\n            }\n        </nav>\n    )\n}\n\n","C:\\Workspace_Alex\\capstone_project\\client\\src\\components\\ProtectedRoute.js",["87"],"import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport NavMenu from './NavMenu';\n\nexport default function ProtectedRoute({ isAuth: isAuth, component: Component, ...rest }) {\n    return (\n        <div>\n            <Route {...rest} render={(props) => {\n                if (isAuth) {\n                    return (\n                        <>\n                            <NavMenu />\n                            <Component />\n                        </>\n                    )\n                } else {\n                    return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n                }\n            }} />\n        </div>\n    )\n}\n","C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\QuestionEdit.js",["88","89"],"import React, { useState, useEffect, useRef } from 'react';\nimport '../style/App.css'\nimport Axios from 'axios'\nimport { useParams, useHistory } from 'react-router-dom'\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport $ from 'jquery'\n\nexport default function QuestionEdit() {\n\n    // route params\n    let { id } = useParams()\n    const history = useHistory();\n\n    // states\n    const [question, setQuestion] = useState({})\n    const [newBody, setQuestionBody] = useState('')\n    const [hideQuestion, setHideQuestion] = useState(false);\n\n    // refs\n    const bodyRef = useRef();\n\n    // get question from server\n    useEffect(() => {\n        Axios.get(`/question/get/${id}`).then((resp) => {\n            console.log(resp.data)\n            setQuestion(\n                {\n                    id: resp.data[0].id,\n                    title: resp.data[0].title,\n                    body: resp.data[0].body,\n                    votes: resp.data[0].votes,\n                    userid: resp.data[0].userid,\n                    username: resp.data[0].username,\n                    categoryid: resp.data[0].categoryid,\n                    category: resp.data[0].category,\n                    createdate: resp.data[0].createdate,\n                    formatdate: resp.data[0].formatdate,\n                }\n            )\n            bodyRef.current.value = resp.data[0].body;\n        })\n\n    }, []);\n\n    // hooks\n    useEffect(() => {\n        bodyRef.current.focus();\n    }, [bodyRef])\n\n\n    // delete question\n    const deleteQuestion = (id) => {\n        // Prompt \"Are you sure you want to delete this question\"\n        Axios.delete(`/question/delete/${id}`);\n        history.push(`/category/${question.categoryid}`)\n    };\n\n    // edit question\n    const submitEdit = (id) => {\n        Axios.post('/question/edit',\n            {\n                id: id,\n                body: newBody\n            });\n        setQuestion(\n            {\n                title: question.title,\n                body: newBody,\n            }\n        )\n        $('#editBtn').click();\n    };\n\n    // handle enter key press\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            submitEdit();\n        }\n    }\n\n    return (\n        <div className=\"page\">\n            <div className=\"container\">\n                <div className=\"row ml-2 mb-2\">\n                    {hideQuestion ?\n                        <h3>There is no question asked</h3> :\n                        <h1>{question.category} <span>&#62;</span> Question {question.id} <span>&#62;</span> Edit</h1>\n                    }\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <div className=\"d-flex w-100 justify-content-between\">\n                                    <h5>{question.username} <span className=\"mb-1 text-muted\">asked </span> </h5>\n                                    <small><span>{question.formatdate}</span></small>\n                                </div>\n                                <h3>{question.title}</h3>\n                                <p>{question.body}</p>\n                            </div>\n                            <div className=\"card-footer\">\n                                <div className=\"card-button left\" id=\"editBtn\" data-toggle=\"collapse\" data-target=\"#edit-form\" aria-expanded=\"false\">\n                                    <span> <EditIcon /> Edit</span>\n                                </div>\n                                <div className=\"card-button right\" onClick={() => { deleteQuestion(id) }}>\n                                    <span> <DeleteIcon /> Delete</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-12\">\n                        <form id=\"edit-form\" className=\"collapse\">\n                            <div className=\"form-group\">\n                                <label htmlFor=\"edit-body\">Edit Question</label>\n                                <textarea className=\"form-control\" id=\"edit-body\" rows=\"3\" maxLength=\"2000\"\n                                    onKeyDown={handleKeyDown}\n                                    ref={bodyRef} onChange={(e) => {\n                                        setQuestionBody(e.target.value);\n                                    }} required></textarea>\n                                {/* <div>{validation.bodyStatus}</div> */}\n                            </div>\n                            <div className=\"form-group\">\n                                <button type=\"button\" className=\"main-button btn btn-primary btn-lg btn-block\" onClick={submitEdit}>Submit</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\ExplorePage.js",["90","91","92","93","94","95","96","97","98","99"],"import React from 'react'\nimport { useHistory, Link } from 'react-router-dom';\nimport MovieCreationIcon from '@material-ui/icons/MovieCreation';\nimport ComputerIcon from '@material-ui/icons/Computer';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport BrushIcon from '@material-ui/icons/Brush';\nimport DeckIcon from '@material-ui/icons/Deck';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport FlightTakeoffIcon from '@material-ui/icons/FlightTakeoff';\n\nexport default function ExplorePage() {\n\n    // route params\n    let history = useHistory();\n\n    return (\n        <div className=\"page\">\n            <div className=\"container\">\n            <div className=\"row ml-2 mb-2\">\n                    <h1>Browse Topics</h1>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"jumbotron category-box\">\n                            <h1>Categories</h1>\n                            <hr className=\"my-4\"></hr>\n                            <div className=\"row\">\n                                <div className=\"col-4\">\n                                    <div className=\"cat-cell\">\n                                        <div className=\"nav-link\" activeclassname=\"active\" onClick={() => history.push('/category/1')}>  Beer Styles</div>\n                                    </div>\n                                </div>\n                                <div className=\"col-4\">\n                                    <div className=\"cat-cell\">\n                                        <li className=\"nav-link\" activeclassname=\"active\" onClick={() => history.push('/category/2')}> HomeBrewing </li>\n                                    </div>\n                                </div>\n                                <div className=\"col-4\">\n                                    <div className=\"cat-cell\">\n                                        <li className=\"nav-link\" activeclassname=\"active\" onClick={() => history.push('/category/3')}> Fermentation </li>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-4\">\n                                    <div className=\"cat-cell\">\n                                        <li className=\"nav-link\" activeclassname=\"active\" onClick={() => history.push('/category/4')}> Hops, Malts & Yeast </li>\n                                    </div>\n                                </div>\n                                <div className=\"col-4\">\n                                    <div className=\"cat-cell\">\n                                        <li className=\"nav-link\" activeclassname=\"active\" onClick={() => history.push('/category/5')}> Barrel Aging </li>\n                                    </div>\n                                </div>\n                                <div className=\"col-4\">\n                                    <div className=\"cat-cell\">\n                                        <li className=\"nav-link\" activeclassname=\"active\" onClick={() => history.push('/category/6')}> Cellaring </li>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-4\">\n                                    <div className=\"cat-cell\">\n                                        <li className=\"nav-link\" activeclassname=\"active\" onClick={() => history.push('/category/7')}> Regional </li>\n                                    </div>\n                                </div>\n                                <div className=\"col-4\">\n                                    <div className=\"cat-cell\">\n                                        <li className=\"nav-link\" activeclassname=\"active\" onClick={() => history.push('/category/8')}> Wine, Mead & Ciders </li>\n                                    </div>\n                                </div>\n                                <div className=\"col-4\">\n                                    <div className=\"cat-cell\">\n                                        <li className=\"nav-link\" activeclassname=\"active\" onClick={() => history.push('/category/9')}> Misc. </li>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\QuestionList.js",[],"C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\AskQuestion.js",[],"C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\QuestionPage.js",["100"],"import React, { useState, useEffect, useRef } from 'react';\nimport '../style/App.css'\nimport Axios from 'axios'\nimport { useParams, useHistory, useLocation } from 'react-router-dom'\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport $ from 'jquery'\nimport { useSelector } from 'react-redux'\n\nexport default function QuestionPage() {\n\n    // route atrr\n    const { id } = useParams();\n    const history = useHistory();\n    const location = useLocation();\n\n    // states\n    const [question, setQuestion] = useState({})\n    const [answerList, setAnswerList] = useState([])\n    const [body, setBody] = useState('')\n    const [hideQuestion, setHideQuestion] = useState(false);\n    const [hideAnswers, setHideAnswers] = useState(false);\n    const userState = useSelector(state => state);\n    const [voteState, setVoteSate] = useState(false);\n\n    // data\n    const date = new Date()\n\n    // refs\n    const bodyRef = useRef();\n\n    \n    useEffect(() => {\n        \n        // get question from server\n        Axios.get(`/question/get/${id}`).then((resp) => {\n            if (resp.data.length === 0) {\n                setHideQuestion(true);\n            } else {\n                setQuestion(\n                    {\n                        id: resp.data[0].id,\n                        title: resp.data[0].title,\n                        body: resp.data[0].body,\n                        votes: resp.data[0].votes,\n                        userid: resp.data[0].userid,\n                        username: resp.data[0].username,\n                        categoryid: resp.data[0].categoryid,\n                        category: resp.data[0].category,\n                        createdate: resp.data[0].createdate,\n                        formatdate: resp.data[0].formatdate,\n                    }\n                )\n            }\n        }, []);\n\n        //check path being passed in\n        console.log('Route location: ' + location.pathname); \n\n        // get answers for question\n        Axios.get(`/answer/get/${id}`).then((resp) => {\n            if (resp.data.length === 0) {\n                setHideAnswers(true);\n            } else {\n                setHideAnswers(false);\n                var answers = resp.data.map(answer => (\n                    {\n                        body: answer.body,\n                        username: answer.username,\n                        formatdate: answer.formatdate\n                    }))\n                setAnswerList(answers)\n            }\n        });\n\n        // open answer input \n        let path = location.pathname.slice(-6);\n        if (path === 'answer') {\n            $('#answerBtn').click();\n        };\n\n    }, [voteState]);\n\n    // set answer body focus\n    useEffect(() => {\n        bodyRef.current.focus();\n    }, [bodyRef])\n\n    // add new answer\n    const submitAnswer = () => {\n        if (body !== '') {\n\n            console.log(date)\n            let newAnswer = {\n                body: body,\n                username: userState.username,\n                formatdate: date.toDateString()\n            }\n            setAnswerList([...answerList, newAnswer])\n            setHideAnswers(false);\n            Axios.post('/answer/add',\n                {\n                    body: body,\n                    userid: userState.userId,\n                    questionid: id\n                }\n            );\n            bodyRef.current.value = '';\n            bodyRef.current.focus();\n            $('#answerBtn').click();\n        };\n    };\n\n    // handle enter key press\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            submitAnswer();\n        }\n    }\n\n    // handle question vote\n    const voteQuestion = (id) => {\n        Axios.put(`/question/vote/${id}`)\n        let prevQuestion = question\n        console.log('question votes = ' + prevQuestion.votes)\n        prevQuestion.votes++;\n        setQuestion(prevQuestion)\n        setVoteSate(!voteState)\n    };\n\n    return (\n        <div className=\"page\">\n            <div className=\"container\">\n                <div className=\"row ml-2 mb-2\">\n                    {hideQuestion ?\n                        <h3>There is no question asked</h3> :\n                        <h1>{question.category} <span>&#62;</span> Question {question.id}</h1>\n                    }\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"card\">\n                            <div className=\"question-body card-body\" onClick={(e) => { history.push(`/edit/${question.id}`) }}>\n                                <div className=\"d-flex w-100 justify-content-between\">\n                                    <h5>{question.username} <span className=\"mb-1 text-muted\">asked </span> </h5>\n                                    <small><span>{question.formatdate}</span></small>\n                                </div>\n                                <h3>{question.title}</h3>\n                                <p>{question.body}</p>\n                            </div>\n                            <div className=\"card-footer\">\n                                <div className=\"card-button left\" id=\"answerBtn\" data-toggle=\"collapse\" data-target=\"#answer-form\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                                    <span> <QuestionAnswerIcon /> Answer</span>\n                                </div>\n                                <div className=\"card-button right\" onClick={(e) => { voteQuestion(question.id) }}>\n                                    <span ><ThumbUpIcon /> {question.votes}</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-12\">\n                        <form id=\"answer-form\" className=\"collapse\">\n                            <div className=\"form-group\">\n                                <label htmlFor=\"answer\">Answer</label>\n                                <textarea className=\"form-control\" id=\"answer\" rows=\"3\" maxLength=\"500\"\n                                    placeholder=\"Provide a detailed answer...\"\n                                    onKeyDown={handleKeyDown}\n                                    ref={bodyRef} onChange={(e) => {\n                                        setBody(e.target.value);\n                                    }} required></textarea>\n                                {/* <div>{validation.bodyStatus}</div> */}\n                            </div>\n                            <div className=\"form-group\">\n                                <button type=\"button\" className=\"main-button btn btn-primary btn-lg btn-block\" onClick={submitAnswer}>Submit</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div id=\"answer-list\">\n                            <ul className=\"list-group list-group-flush\">\n                                {hideAnswers ?\n                                    <li className=\"list-group-item mb-3\">\n                                        <div className=\"d-flex w-100 justify-content-center\">\n                                            <h4>There are no answers for this question</h4>\n                                        </div>\n                                    </li> :\n                                    answerList.map((val, key) => {\n                                        return (\n                                            <li className=\"list-group-item mb-3\" key={key}>\n                                                <div className=\"d-flex w-100 justify-content-between\">\n                                                    <h5 className=\"mb-1\">{val.username} <span className=\"mb-1 text-muted\">answered</span></h5>\n                                                    <small>{val.formatdate}</small>\n                                                </div>\n                                                <p className=\"mb-1\">{val.body}</p>\n                                                <div className=\"d-flex w-100 justify-content-end\">\n                                                </div>\n                                            </li>\n                                        )\n                                    })\n                                }\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\HomePage.js",[],"C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\LoginPage.js",[],"C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\RegisterPage.js",[],"C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\FrontPage.js",[],"C:\\Workspace_Alex\\capstone_project\\client\\src\\components\\NavMenu.js",[],"C:\\Workspace_Alex\\capstone_project\\client\\src\\components\\NavData.js",["101","102","103","104","105","106","107","108","109","110"],"C:\\Workspace_Alex\\capstone_project\\client\\src\\redux\\Reducers\\userReducer.js",[],"C:\\Workspace_Alex\\capstone_project\\client\\src\\redux\\Actions\\actionTypes.js",[],"C:\\Workspace_Alex\\capstone_project\\client\\src\\redux\\Actions\\userActions.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":28,"nodeType":"117","messageId":"118","endLine":1,"endColumn":36},{"ruleId":"115","severity":1,"message":"119","line":15,"column":23,"nodeType":"117","messageId":"118","endLine":15,"endColumn":34},{"ruleId":"115","severity":1,"message":"120","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":26},{"ruleId":"115","severity":1,"message":"116","line":1,"column":28,"nodeType":"117","messageId":"118","endLine":1,"endColumn":36},{"ruleId":"121","severity":1,"message":"122","line":5,"column":42,"nodeType":"123","messageId":"124","endLine":5,"endColumn":56,"fix":"125"},{"ruleId":"115","severity":1,"message":"126","line":18,"column":26,"nodeType":"117","messageId":"118","endLine":18,"endColumn":41},{"ruleId":"127","severity":1,"message":"128","line":44,"column":8,"nodeType":"129","endLine":44,"endColumn":10,"suggestions":"130"},{"ruleId":"115","severity":1,"message":"131","line":2,"column":22,"nodeType":"117","messageId":"118","endLine":2,"endColumn":26},{"ruleId":"115","severity":1,"message":"132","line":3,"column":8,"nodeType":"117","messageId":"118","endLine":3,"endColumn":25},{"ruleId":"115","severity":1,"message":"133","line":4,"column":8,"nodeType":"117","messageId":"118","endLine":4,"endColumn":20},{"ruleId":"115","severity":1,"message":"134","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":26},{"ruleId":"115","severity":1,"message":"135","line":6,"column":8,"nodeType":"117","messageId":"118","endLine":6,"endColumn":20},{"ruleId":"115","severity":1,"message":"136","line":7,"column":8,"nodeType":"117","messageId":"118","endLine":7,"endColumn":26},{"ruleId":"115","severity":1,"message":"137","line":8,"column":8,"nodeType":"117","messageId":"118","endLine":8,"endColumn":17},{"ruleId":"115","severity":1,"message":"138","line":9,"column":8,"nodeType":"117","messageId":"118","endLine":9,"endColumn":16},{"ruleId":"115","severity":1,"message":"139","line":10,"column":8,"nodeType":"117","messageId":"118","endLine":10,"endColumn":16},{"ruleId":"115","severity":1,"message":"140","line":11,"column":8,"nodeType":"117","messageId":"118","endLine":11,"endColumn":25},{"ruleId":"127","severity":1,"message":"141","line":82,"column":8,"nodeType":"129","endLine":82,"endColumn":19,"suggestions":"142"},{"ruleId":"115","severity":1,"message":"143","line":3,"column":8,"nodeType":"117","messageId":"118","endLine":3,"endColumn":19},{"ruleId":"115","severity":1,"message":"132","line":4,"column":8,"nodeType":"117","messageId":"118","endLine":4,"endColumn":25},{"ruleId":"115","severity":1,"message":"133","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":20},{"ruleId":"115","severity":1,"message":"134","line":6,"column":8,"nodeType":"117","messageId":"118","endLine":6,"endColumn":26},{"ruleId":"115","severity":1,"message":"135","line":7,"column":8,"nodeType":"117","messageId":"118","endLine":7,"endColumn":20},{"ruleId":"115","severity":1,"message":"136","line":8,"column":8,"nodeType":"117","messageId":"118","endLine":8,"endColumn":26},{"ruleId":"115","severity":1,"message":"137","line":9,"column":8,"nodeType":"117","messageId":"118","endLine":9,"endColumn":17},{"ruleId":"115","severity":1,"message":"138","line":10,"column":8,"nodeType":"117","messageId":"118","endLine":10,"endColumn":16},{"ruleId":"115","severity":1,"message":"139","line":11,"column":8,"nodeType":"117","messageId":"118","endLine":11,"endColumn":16},{"ruleId":"115","severity":1,"message":"140","line":12,"column":8,"nodeType":"117","messageId":"118","endLine":12,"endColumn":25},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'useEffect' is defined but never used.","no-useless-rename","Destructuring assignment isAuth unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"146","text":"147"},"'setHideQuestion' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["148"],"'Link' is defined but never used.","'MovieCreationIcon' is defined but never used.","'ComputerIcon' is defined but never used.","'MonetizationOnIcon' is defined but never used.","'FastfoodIcon' is defined but never used.","'FavoriteBorderIcon' is defined but never used.","'BrushIcon' is defined but never used.","'DeckIcon' is defined but never used.","'PetsIcon' is defined but never used.","'FlightTakeoffIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'location.pathname'. Either include them or remove the dependency array.",["149"],"'ExploreIcon' is defined but never used.","no-global-assign","no-unsafe-negation",[152,166],"isAuth",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [id]",{"range":"154","text":"155"},"Update the dependencies array to be: [id, location.pathname, voteState]",{"range":"156","text":"157"},[1441,1443],"[id]",[2715,2726],"[id, location.pathname, voteState]"]