[{"C:\\Workspace_Alex\\capstone_project\\client\\src\\index.js":"1","C:\\Workspace_Alex\\capstone_project\\client\\src\\App.js":"2","C:\\Workspace_Alex\\capstone_project\\client\\src\\components\\Header.js":"3","C:\\Workspace_Alex\\capstone_project\\client\\src\\components\\ProtectedRoute.js":"4","C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\QuestionEdit.js":"5","C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\ExplorePage.js":"6","C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\QuestionList.js":"7","C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\AskQuestion.js":"8","C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\QuestionPage.js":"9","C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\HomePage.js":"10","C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\LoginPage.js":"11","C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\RegisterPage.js":"12","C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\FrontPage.js":"13","C:\\Workspace_Alex\\capstone_project\\client\\src\\components\\NavMenu.js":"14","C:\\Workspace_Alex\\capstone_project\\client\\src\\components\\NavData.js":"15","C:\\Workspace_Alex\\capstone_project\\client\\src\\redux\\Reducers\\userReducer.js":"16","C:\\Workspace_Alex\\capstone_project\\client\\src\\redux\\Actions\\actionTypes.js":"17","C:\\Workspace_Alex\\capstone_project\\client\\src\\redux\\Actions\\userActions.js":"18"},{"size":531,"mtime":1611190613586,"results":"19","hashOfConfig":"20"},{"size":2332,"mtime":1611355282457,"results":"21","hashOfConfig":"20"},{"size":2580,"mtime":1611355354568,"results":"22","hashOfConfig":"20"},{"size":683,"mtime":1611190054473,"results":"23","hashOfConfig":"20"},{"size":5049,"mtime":1611354376546,"results":"24","hashOfConfig":"20"},{"size":4209,"mtime":1611257207395,"results":"25","hashOfConfig":"20"},{"size":4228,"mtime":1611354460163,"results":"26","hashOfConfig":"20"},{"size":5622,"mtime":1611281634667,"results":"27","hashOfConfig":"20"},{"size":8718,"mtime":1611286680483,"results":"28","hashOfConfig":"20"},{"size":3747,"mtime":1611286798859,"results":"29","hashOfConfig":"20"},{"size":3944,"mtime":1611190404813,"results":"30","hashOfConfig":"20"},{"size":6654,"mtime":1611352647601,"results":"31","hashOfConfig":"20"},{"size":2196,"mtime":1611354506245,"results":"32","hashOfConfig":"20"},{"size":1533,"mtime":1611255845700,"results":"33","hashOfConfig":"20"},{"size":923,"mtime":1611266553064,"results":"34","hashOfConfig":"20"},{"size":749,"mtime":1611192662975,"results":"35","hashOfConfig":"20"},{"size":93,"mtime":1611192662966,"results":"36","hashOfConfig":"20"},{"size":344,"mtime":1611192662971,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"vzauvi",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Workspace_Alex\\capstone_project\\client\\src\\index.js",[],["78","79"],"C:\\Workspace_Alex\\capstone_project\\client\\src\\App.js",[],"C:\\Workspace_Alex\\capstone_project\\client\\src\\components\\Header.js",[],"C:\\Workspace_Alex\\capstone_project\\client\\src\\components\\ProtectedRoute.js",["80"],"import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport NavMenu from './NavMenu';\n\nexport default function ProtectedRoute({ isAuth: isAuth, component: Component, ...rest }) {\n    return (\n        <div>\n            <Route {...rest} render={(props) => {\n                if (isAuth) {\n                    return (\n                        <>\n                            <NavMenu />\n                            <Component />\n                        </>\n                    )\n                } else {\n                    return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n                }\n            }} />\n        </div>\n    )\n}\n","C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\QuestionEdit.js",["81","82"],"C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\ExplorePage.js",["83"],"import React from 'react'\nimport { useHistory, Link } from 'react-router-dom';\n\n\nexport default function ExplorePage() {\n\n    // route params\n    let history = useHistory();\n\n    return (\n        <div className=\"page\">\n            <div className=\"container\">\n            <div className=\"row ml-2 mb-2\">\n                    <h1>Topics & Categories</h1>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"jumbotron category-box\">\n                            <h1>Categories</h1>\n                            <hr className=\"my-4\"></hr>\n                            <div className=\"row\">\n                                <div className=\"col-4\">\n                                    <div className=\"cat-cell\">\n                                        <div className=\"nav-link\" activeclassname=\"active\" onClick={() => history.push('/category/1')}>  Beer Styles</div>\n                                    </div>\n                                </div>\n                                <div className=\"col-4\">\n                                    <div className=\"cat-cell\">\n                                        <li className=\"nav-link\" activeclassname=\"active\" onClick={() => history.push('/category/2')}> HomeBrewing </li>\n                                    </div>\n                                </div>\n                                <div className=\"col-4\">\n                                    <div className=\"cat-cell\">\n                                        <li className=\"nav-link\" activeclassname=\"active\" onClick={() => history.push('/category/3')}> Fermentation </li>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-4\">\n                                    <div className=\"cat-cell\">\n                                        <li className=\"nav-link\" activeclassname=\"active\" onClick={() => history.push('/category/4')}> Hops, Malts & Yeast </li>\n                                    </div>\n                                </div>\n                                <div className=\"col-4\">\n                                    <div className=\"cat-cell\">\n                                        <li className=\"nav-link\" activeclassname=\"active\" onClick={() => history.push('/category/5')}> Barrel Aging </li>\n                                    </div>\n                                </div>\n                                <div className=\"col-4\">\n                                    <div className=\"cat-cell\">\n                                        <li className=\"nav-link\" activeclassname=\"active\" onClick={() => history.push('/category/6')}> Cellaring </li>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-4\">\n                                    <div className=\"cat-cell\">\n                                        <li className=\"nav-link\" activeclassname=\"active\" onClick={() => history.push('/category/7')}> Regional </li>\n                                    </div>\n                                </div>\n                                <div className=\"col-4\">\n                                    <div className=\"cat-cell\">\n                                        <li className=\"nav-link\" activeclassname=\"active\" onClick={() => history.push('/category/8')}> Wine, Mead & Ciders </li>\n                                    </div>\n                                </div>\n                                <div className=\"col-4\">\n                                    <div className=\"cat-cell\">\n                                        <li className=\"nav-link\" activeclassname=\"active\" onClick={() => history.push('/category/9')}> Misc. Beer Info </li>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\QuestionList.js",[],"C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\AskQuestion.js",[],"C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\QuestionPage.js",["84"],"import React, { useState, useEffect, useRef } from 'react';\nimport '../style/App.css'\nimport Axios from 'axios'\nimport { useParams, useHistory, useLocation } from 'react-router-dom'\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport GradeIcon from '@material-ui/icons/Grade';\nimport $ from 'jquery'\nimport { useSelector } from 'react-redux'\n\nexport default function QuestionPage() {\n\n    // route atrr\n    const { id } = useParams();\n    const history = useHistory();\n    const location = useLocation();\n\n    // states\n    const [question, setQuestion] = useState({})\n    const [answerList, setAnswerList] = useState([])\n    const [body, setBody] = useState('')\n    const [hideQuestion, setHideQuestion] = useState(false);\n    const [hideAnswers, setHideAnswers] = useState(false);\n    const userState = useSelector(state => state);\n    const [voteState, setVoteSate] = useState(false);\n\n    // data\n    const date = new Date()\n\n    // refs\n    const bodyRef = useRef();\n\n    \n    useEffect(() => {\n        \n        // get question from server\n        Axios.get(`/question/get/${id}`).then((resp) => {\n            if (resp.data.length === 0) {\n                setHideQuestion(true);\n            } else {\n                setQuestion(\n                    {\n                        id: resp.data[0].id,\n                        title: resp.data[0].title,\n                        body: resp.data[0].body,\n                        votes: resp.data[0].votes,\n                        userid: resp.data[0].userid,\n                        username: resp.data[0].username,\n                        categoryid: resp.data[0].categoryid,\n                        category: resp.data[0].category,\n                        createdate: resp.data[0].createdate,\n                        formatdate: resp.data[0].formatdate,\n                    }\n                )\n            }\n        }, []);\n\n        //check path being passed in\n        console.log('Route location: ' + location.pathname); \n\n        // get answers for question\n        Axios.get(`/answer/get/${id}`).then((resp) => {\n            if (resp.data.length === 0) {\n                setHideAnswers(true);\n            } else {\n                setHideAnswers(false);\n                var answers = resp.data.map(answer => (\n                    {\n                        body: answer.body,\n                        username: answer.username,\n                        formatdate: answer.formatdate\n                    }))\n                setAnswerList(answers)\n            }\n        });\n\n        // open answer input \n        let path = location.pathname.slice(-6);\n        if (path === 'answer') {\n            $('#answerBtn').click();\n        };\n\n    }, [voteState]);\n\n    // set answer body focus\n    useEffect(() => {\n        bodyRef.current.focus();\n    }, [bodyRef])\n\n    // add new answer\n    const submitAnswer = () => {\n        if (body !== '') {\n\n            console.log(date)\n            let newAnswer = {\n                body: body,\n                username: userState.username,\n                formatdate: date.toDateString()\n            }\n            setAnswerList([...answerList, newAnswer])\n            setHideAnswers(false);\n            Axios.post('/answer/add',\n                {\n                    body: body,\n                    userid: userState.userId,\n                    questionid: id\n                }\n            );\n            bodyRef.current.value = '';\n            bodyRef.current.focus();\n            $('#answerBtn').click();\n        };\n    };\n\n    // handle enter key press\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            submitAnswer();\n        }\n    }\n\n    // handle question vote\n    const voteQuestion = (id) => {\n        Axios.put(`/question/vote/${id}`)\n        let prevQuestion = question\n        console.log('question votes = ' + prevQuestion.votes)\n        prevQuestion.votes++;\n        setQuestion(prevQuestion)\n        setVoteSate(!voteState)\n    };\n\n    return (\n        <div className=\"page\">\n            <div className=\"container\">\n                <div className=\"row ml-2 mb-2\">\n                    {hideQuestion ?\n                        <h3>There is no question asked</h3> :\n                        <h1>{question.category} <span>&#62;</span> Question {question.id}</h1>\n                    }\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"card\">\n                            <div className=\"question-body card-body\" onClick={(e) => { history.push(`/edit/${question.id}`) }}>\n                                <div className=\"d-flex w-100 justify-content-between\">\n                                    <h5>{question.username} <span className=\"mb-1 text-muted\">asked </span> </h5>\n                                    <small><span>{question.formatdate}</span></small>\n                                </div>\n                                <h3>{question.title}</h3>\n                                <p>{question.body}</p>\n                            </div>\n                            <div className=\"card-footer\">\n                                <div className=\"card-button left\" id=\"answerBtn\" data-toggle=\"collapse\" data-target=\"#answer-form\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                                    <span> <QuestionAnswerIcon /> Answer</span>\n                                </div>\n                                <div className=\"card-button right\" onClick={(e) => { voteQuestion(question.id) }}>\n                                    <span ><GradeIcon /> {question.votes}</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-12\">\n                        <form id=\"answer-form\" className=\"collapse\">\n                            <div className=\"form-group\">\n                                <label htmlFor=\"answer\">Answer</label>\n                                <textarea className=\"form-control\" id=\"answer\" rows=\"3\" maxLength=\"500\"\n                                    placeholder=\"Provide an answer here...\"\n                                    onKeyDown={handleKeyDown}\n                                    ref={bodyRef} onChange={(e) => {\n                                        setBody(e.target.value);\n                                    }} required></textarea>\n                                {/* <div>{validation.bodyStatus}</div> */}\n                            </div>\n                            <div className=\"form-group\">\n                                <button type=\"button\" className=\"main-button btn btn-primary btn-lg btn-block\" onClick={submitAnswer}>Submit</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div id=\"answer-list\">\n                            <ul className=\"list-group list-group-flush\">\n                                {hideAnswers ?\n                                    <li className=\"list-group-item mb-3\">\n                                        <div className=\"d-flex w-100 justify-content-center\">\n                                            <h4>There are no answers for this question</h4>\n                                        </div>\n                                    </li> :\n                                    answerList.map((val, key) => {\n                                        return (\n                                            <li className=\"list-group-item mb-3\" key={key}>\n                                                <div className=\"d-flex w-100 justify-content-between\">\n                                                    <h5 className=\"mb-1\">{val.username} <span className=\"mb-1 text-muted\">answered</span></h5>\n                                                    <small>{val.formatdate}</small>\n                                                </div>\n                                                <p className=\"mb-1\">{val.body}</p>\n                                                <div className=\"d-flex w-100 justify-content-end\">\n                                                </div>\n                                            </li>\n                                        )\n                                    })\n                                }\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\HomePage.js",[],"C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\LoginPage.js",[],"C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\RegisterPage.js",[],"C:\\Workspace_Alex\\capstone_project\\client\\src\\pages\\FrontPage.js",[],"C:\\Workspace_Alex\\capstone_project\\client\\src\\components\\NavMenu.js",[],"C:\\Workspace_Alex\\capstone_project\\client\\src\\components\\NavData.js",[],"C:\\Workspace_Alex\\capstone_project\\client\\src\\redux\\Reducers\\userReducer.js",[],"C:\\Workspace_Alex\\capstone_project\\client\\src\\redux\\Actions\\actionTypes.js",[],"C:\\Workspace_Alex\\capstone_project\\client\\src\\redux\\Actions\\userActions.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":5,"column":42,"nodeType":"91","messageId":"92","endLine":5,"endColumn":56,"fix":"93"},{"ruleId":"94","severity":1,"message":"95","line":18,"column":26,"nodeType":"96","messageId":"97","endLine":18,"endColumn":41},{"ruleId":"98","severity":1,"message":"99","line":44,"column":8,"nodeType":"100","endLine":44,"endColumn":10,"suggestions":"101"},{"ruleId":"94","severity":1,"message":"102","line":2,"column":22,"nodeType":"96","messageId":"97","endLine":2,"endColumn":26},{"ruleId":"98","severity":1,"message":"103","line":82,"column":8,"nodeType":"100","endLine":82,"endColumn":19,"suggestions":"104"},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-useless-rename","Destructuring assignment isAuth unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"107","text":"108"},"no-unused-vars","'setHideQuestion' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["109"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'location.pathname'. Either include them or remove the dependency array.",["110"],"no-global-assign","no-unsafe-negation",[152,166],"isAuth",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [id]",{"range":"115","text":"116"},"Update the dependencies array to be: [id, location.pathname, voteState]",{"range":"117","text":"118"},[1441,1443],"[id]",[2711,2722],"[id, location.pathname, voteState]"]